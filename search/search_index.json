{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the DBRetina documentation","text":""},{"location":"#dbretina-introduction","title":"DBRetina introduction","text":"<p>DBRetina is a powerful tool designed to calculate pairwise distances between numerous entities, such as diseases or molecular experiments, based on their shared features, such as genes. DBRetina provides valuable insights for researchers and professionals in various fields by identifying similarities between entries in a given database.</p> <p>For instance, in the context of a disease database, each disease is associated with a set of risk genes. DBRetina calculates the pairwise distance between all diseases in the database by analyzing the number of shared genes between each pair of diseases. This information can be used to identify closely related diseases or uncover underlying patterns in the data.</p> <p>DBRetina streamlines the analysis of complex relationships within databases by leveraging advanced indexing and querying techniques. Its versatile and efficient design allows users to work with various data types and structures, making it a valuable tool for understanding and interpreting complex biological and molecular associations.</p>"},{"location":"installation/","title":"DBRetina installation","text":""},{"location":"installation/#system-requirements","title":"System requirements","text":"<p>The current version of DBRetina is compatible exclusively with <code>x86_64</code> architecture systems running Linux and Python versions 3.6 to 3.10. In the future we will support conda installations and Docker.</p>"},{"location":"installation/#installation","title":"Installation","text":"<p>To install DBRetina, type in the terminal:</p> <pre><code>pip install DBRetina\n</code></pre> <p>Alternavely if you're working in a conda environment, you can type:</p> <pre><code>conda create -n dbretina python=3.10\nconda activate dbretina\npip install DBRetina\n</code></pre>"},{"location":"quick_example/","title":"Quick Example","text":""},{"location":"usage/dbretina_cluster/","title":"4. Cluster","text":"<p>Graph-based clustering of the pairwise TSV file based on the connected components algorithm. The clustering is based on the distance metric and the cutoff value. The output is a DBRetina clusters file.</p> <pre><code>Usage: DBRetina cluster [OPTIONS]\n\n  Graph-based clustering of the pairwise TSV file.\n\nOptions:\n  -p, --pairwise PATH       filtered pairwise TSV file\n  -d, --dist-type TEXT      select from ['min_cont', 'avg_cont', 'max_cont',\n                            'ochiai', 'jaccard']  [required]\n  -c, --cutoff FLOAT RANGE  cluster the supergroups with (distance &gt; cutoff)\n                            [default: 0.0; 0&lt;=x&lt;=100]\n  -o, --output-prefix TEXT  output file prefix  [required]\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"usage/dbretina_cluster/#41-command-arguments","title":"4.1 Command arguments","text":"<p> -c, --cutoff FLOAT RANGE  cluster the supergroups with (distance &gt; cutoff) [default: 0.0; 0&lt;=x&lt;=100] </p> <p>The cutoff value for clustering the supergroups. The default value is 0.0, which means that all supergroups will be clustered together. The cutoff value can be between 0% and 100%.</p> <p> -p, --pairwise PATH       filtered pairwise TSV file  [required] </p> <p>The original or a filtered pairwise TSV file.</p> <p> -d, --dist-type TEXT      select from ['min_cont', 'avg_cont', 'max_cont', 'ochiai', 'jaccard']  [required] </p> <p>The distance metric to apply the cutoff on.</p>"},{"location":"usage/dbretina_cluster/#42-output-files-format","title":"4.2 Output files format","text":"<p> {output_prefix}_clusters.tsv </p> <p>The DBRetina clusters TSV file. First column is the cluster ID, second column is the cluster size, and the third column is PIPE separated cluster members.</p> <p> {output_prefix}_clusters_histogram.png </p> <p>A histogram provides a visual representation of the distribution of cluster sizes. Each bar corresponds to a size range, with the height of the bar indicating the number of clusters falling within that range. This allows for a quick understanding of how cluster sizes are distributed, identifying common sizes and outliers.</p> <p> {output_prefix}_clusters_bubbles.png </p> <p>Bubble plot uses a grid layout to represent distinct clusters. The bubble size and color gradient both denote the magnitude of each cluster. The bubble plot is useful for visualizing the distribution of cluster sizes and the relative sizes of each cluster.</p>"},{"location":"usage/dbretina_filter/","title":"3. Filter","text":"<p>The Filter command in DBRetina is designed to filter out the pairwise TSV file. The command requires the full path of the pairwise TSV file.</p> <pre><code>Usage: DBRetina filter [OPTIONS]\n\n  Filter a pairwise file.\n\n  Detailed description:\n\n      Filter a pairwise file by distance cutoff and/or a set of groups\n      (provided as a single-column file or cluster IDs in a DBRetina cluster\n      file).\n\n  Examples:\n\n      1- distance cutoff only              | dbretina filter -p pairwise.tsv\n      -d ochiai -c 0.5 -o filtered.tsv\n\n      2- distance cutoff and groups file   | dbretina filter -p pairwise.tsv\n      -d min_cont -c 0.5 -g groups.tsv -o filtered.tsv\n\n      3- distance cutoff and a cluster IDs | dbretina filter -p pairwise.tsv\n      -d max_cont -c 0.5 --clusters-file clusters.tsv --clusters-id 8 -o\n      filtered.tsv\n\n      4- groups file only                  | dbretina filter -p pairwise.tsv\n      -g groups.tsv -o filtered.tsv\n\n      5- cluster file with cluster IDs     | dbretina filter -p pairwise.tsv\n      --clusters-file clusters.tsv --clusters-id 8 -o filtered.tsv\n\nOptions:\n  -p, --pairwise PATH       the pairwise TSV file  [required]\n  -g, --groups-file PATH    single-column supergroups file\n  --clusters-file PATH      DBRetina clusters file\n  --cluster-ids TEXT        comma-separated list of cluster IDs\n  -d, --dist-type TEXT      select from ['min_cont', 'avg_cont', 'max_cont',\n                            'ochiai', 'jaccard']  [default: NA]\n  -c, --cutoff FLOAT RANGE  filter out distances &lt; cutoff  [default: 0.0;\n                            0&lt;=x&lt;=100]\n  -o, --output TEXT         output file prefix  [required]\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"usage/dbretina_filter/#31-command-arguments","title":"3.1 Command arguments","text":""},{"location":"usage/dbretina_filter/#311-filtering-by-distances-cutoff","title":"3.1.1 Filtering by distance's cutoff","text":"<p> -c, --cutoff FLOAT RANGE  filter out distances &lt; cutoff  [default: 0.0; 0&lt;=x&lt;=100] </p> <p>This will filter out all pairwise distances that are below the cutoff value.</p> <p> -d, --dist-type TEXT      select from ['min_cont', 'avg_cont', 'max_cont', 'ochiai', 'jaccard']  [default: NA] </p> <p>The distance metric to apply the cutoff on. </p>"},{"location":"usage/dbretina_filter/#312-filtering-by-supergroups","title":"3.1.2 Filtering by supergroups","text":"<p> -g, --groups-file PATH    single-column supergroups file </p> <p>This will filter out all pairwise distances that are between supergroups that are not in the provided groups file. The groups file is a single-column file that contains the names of the supergroups to be included in the filtering.</p>"},{"location":"usage/dbretina_filter/#313-filtering-by-clusters","title":"3.1.3 Filtering by clusters","text":"<p>This will filter out all pairwise distances that are between clusters that are not in the provided clusters file.</p> <p> --clusters-file PATH      DBRetina clusters file </p> <p>The clusters file is a DBRetina clusters file that contains the cluster IDs to be included in the filtering.</p> <p> --cluster-ids TEXT        comma-separated list of cluster IDs </p> <p>The cluster IDs selected from the clusters file. This argument is only used if the clusters file is not provided.</p>"},{"location":"usage/dbretina_filter/#32-output-files-format","title":"3.2 Output files format","text":"<p> {output_prefix}.tsv </p> <p>Filtered version of the pairwise TSV file.</p>"},{"location":"usage/dbretina_index/","title":"1. Indexing (Index the input data files)","text":"<p>The Indexing process in DBRetina primarily focuses on featurerating an index structure for the input entities and their associated features. This structure is utilized for calculating pairwise distances between input entities using the \"pairwise\" command, as well as querying one or more features to determine their associated entities with the \"query\" command.</p> <pre><code>Usage: DBRetina index [OPTIONS]\n\n  Index the input data files.\n\nOptions:\n  -a, --asc PATH     associations file  [required]\n  -n, --names PATH   names file\n  -o, --output TEXT  output file prefix  [required]\n  --help             Show this message and exit.\n</code></pre>"},{"location":"usage/dbretina_index/#11-command-arguments","title":"1.1 Command arguments","text":"<p>Warning</p> <ul> <li>The text of all input files is automatically converted to lowercase.</li> <li>All double quotes are removed.</li> </ul> <p>Danger</p> <p>Pipe character <code>|</code> can't be used in the input data.</p> <p>-a, --asc PATH     associations file  [required]</p> <p>The \"Association File\" is a two-column TSV (tab-separated values) file with an included header. The first column denotes groups, while the second column indicates the features associated with each respective group. Each row signifies a single feature and its corresponding group.</p> <p>Example of an Association File with features as features:</p> <p><pre><code>Disease       feature\nBreast Cancer BRCA1\nBreast Cancer BRCA2\nLung Cancer   EGFR\nLung Cancer   KRAS\n</code></pre> </p> <p> -n, --names PATH      names file [optional]</p> <p>The \"Names File\" is another two-column TSV file (without header). The first column represents the group names from the Association File, and the second column specifies the corresponding supergroup or alias name. The Names File serves to allow the grouping of related groups under a broader category or supergroup. This file is optional; if not provided, the groups from the Association File will be treated as supergroups. Also, it can also provide partial grouping of the association file.</p> <p>Example of a Names File:</p> <pre><code>Breast Cancer Cancer\nLung Cancer   Cancer\n</code></pre> <p></p> <p> -n, --names PATH      names file [optional]</p> <p>Out output files of the index will carry the provided index.  XX add somthing about feature to groups then refer to the output file format section</p>"},{"location":"usage/dbretina_index/#12-output-files-format","title":"1.2 Output files format","text":"<p>The output featurerated by the Index command consists of two JSON files (private and public) and a set of index files. These files are explained in detail below:</p> <p> 1.2.1 {prefix}_raw.json </p> <p>This JSON file contains supergroups and their related features in plain text.</p> <p> 1.2.2 {prefix}_hashes.json </p> <p>This is another JSON file that contains supergroups and their related features, but the features are hashed for indexing.</p> <p> 1.2.3 {prefix}_* </p> <p>The generated index files contains binary and text files that hold the index information.</p>"},{"location":"usage/dbretina_pairwise/","title":"2. Pairwise","text":"<p>The Pairwise command in DBRetina is designed to perform pairwise comparisons between supergroups based on their shared features. This command takes the index prefix and the number of cores as input parameters.</p> <pre><code>Usage: DBRetina pairwise [OPTIONS]\n\n  Calculate pairwise distances.\n\nOptions:\n  -i, --index-prefix TEXT   Index file prefix  [required]\n  -t, --threads INTEGER     number of cores\n  -d, --dist-type TEXT      select from ['min_cont', 'avg_cont', 'max_cont',\n                            'ochiai', 'jaccard']  [default: max_cont]\n  -c, --cutoff FLOAT RANGE  filter out distances &lt; cutoff  [default: 0.0;\n                            0&lt;=x&lt;=100]\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"usage/dbretina_pairwise/#21-command-arguments","title":"2.1 Command arguments","text":"<p> -i, --index-prefix TEXT  Index file prefix  [required] </p> <p>This is the user-defined prefix that was used in the indexing step.</p> <p> -t, --threads INTEGER    number of cores </p> <p>The number of processing cores to be used for parallel computation during the pairwise comparisons.</p> <p> -d, --dist-type TEXT     select from ['min_cont', 'avg_cont', 'max_cont', 'ochiai', 'jaccard']  [default: max_cont] </p> <p> -c, --cutoff FLOAT RANGE filter out distances &lt; cutoff  [default: 0.0; 0&lt;=x&lt;=100] </p> <p>The <code>-d</code> and <code>-c</code> input parameters serve the purpose of selecting a particular distance metric and predefined cutoff. This cutoff will eliminate all pairwise comparisons that have a distance value lower than the cutoff.</p>"},{"location":"usage/dbretina_pairwise/#22-output-files-format","title":"2.2 Output files format","text":"<p> {perfix}_DBRetina_pairwise.tsv </p> <p>A TSV file that provides information about shared features between each pair of supergroups. The TSV columns are defined as follows:</p> group_1_ID ID of the first supergroup in a pair group_2_ID ID of the second supergroup in a pair group_1_name name of the first supergroup in a pair group_2_name name of the second supergroup in a pair shared_features number of features shared between the two supergroups min_containment minimum containment between the two supergroups avg_containment average containment between the two supergroups max_containment maximum containment between the two supergroups ochiai Ochiai distance between the two supergroups jaccard Jaccard distance between the two supergroups"},{"location":"usage/dbretina_pairwise/#the-output-png-file-of-histogram-of-pairwise-distances","title":"The output PNG file of histogram of pairwise distances","text":"<p> {index_prefix}_DBRetina_distance_metrics_plot_log.png </p> <p>clustered bar chart illustrates the frequency distribution of five distance metrics - min_cont, avg_cont, max_cont, ochiai, and jaccard - across various distance ranges. The y-axis is displayed on a logarithmic scale to accommodate the wide range of frequencies observed in the data.</p> <p> {index_prefix}_DBRetina_distance_metrics_plot_linear.png </p> <p>Same as above, but the y-axis is displayed on a linear scale.</p>"},{"location":"usage/dbretina_query/","title":"5. Query","text":"<p>Query a DBRetina index with a set of groups (provided as a single-column file or cluster IDs in a DBRetina cluster file).</p> <pre><code>Usage: DBRetina query [OPTIONS]\n\n  Query DBRetina index.\n\n  Detailed description:\n\n      Query a DBRetina index with a set of groups (provided as a single-column\n      file or cluster IDs in a DBRetina cluster file). Output each feature and\n      the associated supergroups.\n\n  Examples:\n\n      1- groups file                    | DBRetina query -i index_prefix -g\n      groups_file -o output_prefix\n\n      2- clusters file with cluster IDs | DBRetina query -i index_prefix\n      --clusters-file clusters_file --cluster-ids 1,2,3 -o output_prefix\n\nOptions:\n  -i, --index-prefix TEXT  index file prefix  [required]\n  -g, --groups-file PATH   single-column supergroups file\n  --clusters-file PATH     DBRetina clusters file\n  --cluster-ids TEXT       comma-separated list of cluster IDs\n  -o, --output TEXT        output file prefix  [required]\n  --help                   Show this message and exit.\n</code></pre>"},{"location":"usage/dbretina_query/#51-command-arguments","title":"5.1 Command arguments","text":"<p> -i, --index-prefix TEXT  Index file prefix  [required] </p> <p>This is the user-defined prefix that was used in the indexing step.</p> <p> -g, --groups-file PATH    single-column supergroups file </p> <p>This will filter out all pairwise distances that are between supergroups that are not in the provided groups file. The groups file is a single-column file that contains the names of the supergroups to be included in the filtering.</p> <p> --cluster-ids TEXT        comma-separated list of cluster IDs </p> <p>The cluster IDs selected from the clusters file. This argument is only used if the clusters file is not provided.</p> <p> -o, --output TEXT        output file prefix  [required] </p> <p>The output prefix that should be unique for this query.</p>"},{"location":"usage/dbretina_query/#52-output-files-format","title":"5.2 Output files format","text":"<p> {output_prefix}_features_count_per_group.tsv </p> <p>A TSV file containing two columns, the first column is the supergroup name and the second column is the number of features that are contained in that supergroup, and the third column is a PIPE-separated list of supergroups from the user query that are associated with the feature in the first column.</p> <p> {output_prefix}_features_count_per_group_histogram.png </p> <p>A histogram plot showing the distribution of the number of features per supergroup.</p>"}]}